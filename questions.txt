Kyle Webster
CSCI-305

10. For 10 of the tested 15 words, I see the phrase "the world is a little girl in" showing up over and over again for anytime 'the' is used.
    That phrase demonstrates an issue with the create_title method as once a common word is used, then it sends the rest of the title into a loop
    of words.

14. So many titles devolve into phrases repeating themselves because some phrases' bigrams circle around. An example is the bigram "the world" and "in the" where a phrase "is a little girl"
    fits in between. The phrase will self loop because of how the bigram count worked.

15. I found a word that did not devolve into a repeating patten, "montana". The phrase "montana sacra nova scotia" was the only phrase that I tried that didn't devolve into a repeating pattern.

16. I found on stackoverflow a .scan().length function that allowed me to check for repeating patterns as the title was being made. I made the returned word from mcw() and used that as the
    regular expression to be inputted into .scan(). I then checked the length of the found words and determined that if the length was = 1, since if scan finds 1 regular expression then it returns 0,
    then I would return the title in it's current state and left create_title(). This prevents the chance for repeats, but will fail if the most common word has multiple possibilities.

19. Using "bob", I get many different titles. The program finds many different titles because of the randomness associated to words with songs that occur in an equal amount of bigrams. In this case;
    song, vs, me, purt, and medley follow "marley" an equal amount of times.

20. My favorite song title is "kyle beach party time is my heart" because my name had a song associated to it and a beach party sounded quite nice.

21. I really enjoyed ruby's syntax. It matched the way I think a lot better than Object Oriented and programming such a complicated sounding program was so much easier than it would have been with java.

22. While ruby's tools were great, learning about them while trying to find the right one and learning about the syntax was so exhausting.

23. I enjoyed the lab a lot. I thought it was challenging enough and once the right tools were found, it was easy to think through and solve. The biggest problem I had was that I didn't know what
    the Nil Class errors were. It took a lot of time and frustration working with the various ruby tools to figure out why I was getting the error.

24. On coding and debugging, about 7 hours. On researching and trying to find the tools that I needed, I would estimate around 4 hours. On just trying to understand the Nil class errors, easily 2-3 hours.

25. I think I would use ruby or ruby-like languages on a regular basis now. I will mostly use it for data manipulation or processes that don't require a low level language. 
